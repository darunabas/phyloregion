---
title: "Benchmark"
author: "Barnabas H. Daru, Piyal Karunarathne & Klaus Schliep"
date: "`r format(Sys.time(), '%B %d, %Y')`"
output: rmarkdown::html_vignette
bibliography: phyloregion.bib
vignette: >
   %\VignetteIndexEntry{phylorregion-intro}
   %\VignetteEngine{knitr::rmarkdown}
   %\usepackage[utf8]{inputenc}
---

## Benchmarking `phyloregion`

In this vignette, we benchmark `phyloregion` against other similar `R`
packages in analyses of compositional turnover (beta diversity and
phylogenetic beta diversity) and more standard conservation measures
of alpha diversity such as phylogenetic diversity. Specifically, we
compared `phyloregion`'s functions with available packages for memory
efficiency and computation speed for various biogeographic analyses.

First, load the packages for the benchmarking:
```{r, echo=FALSE}
library(ape)
library(Matrix)
library(bench)
suppressPackageStartupMessages( library(ggplot2) )
# packages we benchmark
suppressPackageStartupMessages( library(phyloregion) )
suppressPackageStartupMessages( library(betapart) )
suppressPackageStartupMessages( library(picante) )
suppressPackageStartupMessages( library(vegan) )
suppressPackageStartupMessages( library(hilldiv) )
suppressPackageStartupMessages( library(BAT) )
```
```{r}
library(ape)
library(Matrix)
library(bench)
library(ggplot2)
# packages we benchmark
library(phyloregion)
library(betapart)
library(picante)
library(vegan)
library(hilldiv)
library(BAT)
```
We will use a small data set which comes with `phyloregion`.
```{r}
data(africa)
# subset matrix
X_sparse <- africa$comm[1:30, ]
X_sparse <- X_sparse[, colSums(X_sparse)>0]
X_dense <- as.matrix(X_sparse)
Xt_dense <- t(X_dense)

object.size(X_sparse)
object.size(X_dense)
dim(X_sparse)
```
To make results comparable, it is sometimes desirable to make sure
that the taxa in different datasets match each other. For example,
the community matrix in the `hilldiv` package needs to be transposed.
These transformations can influence the execution times, often only marginally.
To benchmark, we used the package `bench` because it returns execution times
and provides some estimate on memory allocations for each computation.

## 1. Analysis of compositional turnover (beta diversity)
#### 1.1. Benchmarking `phyloregion` for analysis of taxonomic beta diversity

For analysis of taxonomic beta diversity, `phyloregion` has marginal advantage
over other packages:
```{r, beta_diversity}
chk_fun <- function(target, current)
    all.equal(target, current, check.attributes = FALSE)

fun_phyloregion <- function(x) as.matrix(phyloregion::beta_diss(x)[[3]])
fun_betapart <- function(x) as.matrix(betapart::beta.pair(x)[[3]])
fun_vegan  <- function(x) as.matrix(vegan::vegdist(x, binary=TRUE))
fun_BAT <- function(x) as.matrix(BAT::beta(x, func = "Soerensen")[[1]])
results <- bench::mark(phyloregion=fun_phyloregion(X_sparse), betapart=fun_betapart(X_dense),
                       vegan=fun_vegan(X_dense), BAT=fun_BAT(X_dense), check=chk_fun)
summary(results)
autoplot(results)
```

#### 1.2. Benchmarking `phyloregion` for analysis of phylogenetic beta diversity
For analysis phylogenetic turnover (beta-diversity) among communities - the
proportion of shared phylogenetic branch lengths between communities -
`phyloregion` is 3-7 times faster and 100-600 times efficient in
memory allocation!
```{r, phylobeta}
fun_phyloregion <- function(x, tree) phyloregion::phylobeta(x, tree)[[3]]
fun_betapart <- function(x, tree) betapart::phylo.beta.pair(x, tree)[[3]]
fun_picante <- function(x, tree) 1 - picante::phylosor(x, tree)
fun_BAT <- function(x, tree) BAT::beta(x, tree, func = "Soerensen")[[1]]

chk_fun <- function(target, current)
    all.equal(target, current, check.attributes = FALSE)

results <- bench::mark(picante=fun_picante(X_dense, tree),
                       betapart=fun_betapart(X_dense, tree),
                       BAT=fun_BAT(X_dense, tree),
                       phyloregion=fun_phyloregion(X_sparse, tree), check=chk_fun)
summary(results)
autoplot(results)
```
Note that for this test, `picante` returns a similarity matrix while
`betapart` and `phyloregion` return a dissimilarity matrix.

## 2. Analysis of alpha diversity
#### 2.1. Benchmarking `phyloregion` for analysis of phylogenetic diversity
For analysis of more standard conservation measures such as phylogenetic
diversity - the sum of all phylogenetic branch lengths within an area
(Faith 1992) - phyloregion is 34 to 99 orders of magnitude memory efficient!
```{r, phylo_diversity}
tree <- africa$phylo
tree <- keep.tip(tree, colnames(X_sparse))

pd_picante <- function(x, tree){
    res <- picante::pd(x, tree)[,1]
    names(res) <- row.names(x)
    res
}
pd_hilldiv <- function(x, tree) hilldiv::index_div(x, tree, index="faith")
pd_phyloregion <- function(x, tree) phyloregion::PD(x, tree)

results <- bench::mark(picante=pd_picante(X_dense, tree),
          hilldiv=pd_hilldiv(Xt_dense,tree=tree),
          phyloregion=pd_phyloregion(X_sparse, tree))
summary(results)
autoplot(results)
```


## Session Infomation
```{r, eval=TRUE}
sessionInfo()
```

